---
- name: BUILD NETWORK fail if vm_ip is not defined
  fail:
    msg: "Could not find the ip address for the VM {{ vm_name }}."
  when: vm_ip is not defined or vm_ip | length == 0

- set_fact:
    vm_ip_differ: false

- name: user provided ip address with ip addresses found
  when: dhcp_vm_ip is defined
  block:
  - name: BUILD NETWORK check if VM current ip matches the user provided ip
    set_fact:
      vm_ip_differ: true
    when: vm_ipaddress | length != 0 and (dhcp_vm_ip.stdout != vm_ipaddress)
  
  - name: BUILD NETWORK set VM ip address to user specefied
    set_fact:
      vm_ip: "{{ vm_ipaddress }}"
    when: vm_ip_differ|bool

- name: BUILD NETWORK discover {{ vm_name }} netmask prefix when using DHCP
  shell: |
    /usr/local/bin/getvmip -a| awk -F'/' '/{{ vm_ip }}/ {print $2}'
  register: netmask_prefix
  changed_when: False
  when: not vm_cidr|bool

- name: BUILD NETWORK setting vm_cidr variable to {{ vm_name }} dhcp provided netmask
  set_fact:
    vm_cidr: "{{ netmask_prefix.stdout }}"
  when: not vm_cidr|bool

- name: BUILD NETWORK discover {{ vm_name }} gateway when using DHCP
  shell: |
       ip route get 8.8.8.8|awk '/via/ {print $3}'
  delegate_to: "{{ dhcp_vm_ip.stdout }}"
  changed_when: false
  register: gateway
  when: vm_gateway == ''

- name: BUILD NETWORK setting vm_gateway variable to {{ vm_name }} dhcp provided gateway
  set_fact:
    vm_gateway: "{{ gateway.stdout }}"
  when: vm_gateway == ''

- name: BUILD NETWORK Get MAC address
  shell: >
     virsh --connect qemu:///system dumpxml {{ vm_name }} | awk -F\' '/mac address/ {print $2}'
  register: vm_mac_result
  changed_when: false
  when: vm_name in all_instances.list_vms and vm_mac == ''

- name: BUILD NETWORK setting {{ vm_name }} vm_mac variable to {{ vm_mac_result.stdout }} 
  set_fact:
    vm_mac: "{{ vm_mac_result.stdout }}"
  when: vm_name in all_instances.list_vms and vm_mac == ''
